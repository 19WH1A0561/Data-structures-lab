1.C Program to Add Two Complex Numbers by Passing Structure to a Function

#include<stdio.h>
struct complex
{
	float real,imag;
};
struct complex add(struct complex C1,struct complex C2)
{
	struct complex C3;
	C3.real = C1.real + C2.real;
	C3.imag = C1.imag + C2.imag;
	return C3;
}
struct complex sub(struct complex C1,struct complex C2)
{
	struct complex C3;
	C3.real = C1.real - C2.real;
	C3.imag = C1.imag - C2.imag;
	return C3;
}
struct complex mul(struct complex C1,struct complex C2)
{
	struct complex C3;
	C3.real = (C1.real * C2.real)-(C1.imag * C2.imag);
	C3.imag = (C1.real * C2.imag)+(C2.real * C1.imag);
	return C3;
}
int main()
{
	struct complex C1,C2,Add,Sub,Mul;
	scanf("%f%f",&C1.real,&C1.imag);
	scanf("%f%f",&C2.real,&C2.imag);
	Add = add(C1,C2);
	Sub = sub(C1,C2);
	Mul = mul(C1,C2);
	printf("%f + %fi\n",Add.real,Add.imag);
	printf("%f + %fi\n",Sub.real,Sub.imag);
	printf("%f + %fi\n",Mul.real,Mul.imag);
}


2. C Program to Store Information of Students Using Structure
#include<stdio.h>
struct student
{
	char roll[15];
	char name[30];
	int m[3];
};
int main()
{
	char grade;
	struct student s[3];
	int n,i,j;
	scanf("%d",&n);
	float avg,sum = 0;
	for(i = 0;i < n;i++)
	{
		scanf("%s",s[i].roll);
		sum = 0;
		scanf("%s",s[i].name);
		for(j = 0;j < 3;j++)
		{
			scanf("%d",&s[i].m[j]);
			sum += s[i].m[j];
		}
		avg = sum/3.0;
		if (avg >= 80.0)
			grade = 'A';
		else if (avg <= 40.0 && avg < 80.0)
			grade = 'B';
		else
			grade = 'C';
		printf("roll = %s\t name = %s\t grade = %c\n",s[i].roll,s[i].name,grade);
	}
}


3.Write a C program to node with data and link using self referential structures
#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node*link;
};
int main()
{
	struct node*s;
	s = (struct node*)malloc(sizeof(struct node));
	s->data = 100;
	s->link = NULL;
	printf("data = %d",s->data);
}

4.Write a C program to node with data and two link using self referential structures
#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node*prev;
	struct node*next;
};
int main()
{
	struct node*s;
	s = (struct node*)malloc(sizeof(struct node));
	s->data = 100;
	s->prev = NULL;
	s->next = NULL;
	printf("data = %d",s->data);
}

